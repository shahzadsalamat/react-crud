{"version":3,"sources":["components/createUserForm.js","components/users.js","App.js","index.js"],"names":["CreateUserForm","handleAddUser","e","newUser","firstName","refs","firstname","value","lastName","lastname","preventDefault","props","addNewUser","target","reset","onSubmit","this","bind","className","type","name","placeholder","ref","Component","Users","handleChange","event","setState","handleDeleteUser","user","deleteUser","handleEditMode","editMode","handleUpdateUser","updatedUser","id","state","updateUser","handleCancelUpdate","defaultValue","onChange","onClick","App","previousUsers","users","push","length","newUsers","filter","i","console","log","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.554824c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CreateUserForm extends Component {\r\n\r\n    handleAddUser = (e) => {\r\n        const newUser = {\r\n            firstName: this.refs.firstname.value,\r\n            lastName: this.refs.lastname.value\r\n        }\r\n        e.preventDefault();\r\n        this.props.addNewUser(newUser);\r\n        //reset the form after submit\r\n        e.target.reset();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleAddUser.bind(this)} >\r\n                    <div className='diplay-flex flex-flow-col'>\r\n                        <div>\r\n                        <input\r\n                        type='text'\r\n                        name='firstname'\r\n                        className='input-text-underlined'\r\n                        placeholder='First name'\r\n                        ref='firstname'\r\n                    /></div>\r\n                        <div className='margin-top-8px'>\r\n                        <input\r\n                        type='text'\r\n                        name='lastname'\r\n                        className='input-text-underlined'\r\n                        placeholder='Last name'\r\n                        ref='lastname'\r\n                    /></div>\r\n                        <div className='margin-top-8px'>                   \r\n                        <input className='input-button' type='submit' value='Add user' />\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CreateUserForm;","import React, { Component } from 'react';\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false,\r\n            firstName: \"\",\r\n            lastName: \"\"\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    }\r\n    handleDeleteUser = (user) => {\r\n        this.props.deleteUser(user);\r\n    }\r\n    handleEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    handleUpdateUser = (user) => {\r\n        const updatedUser = {\r\n            id: this.props.user.id,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName\r\n        };\r\n\r\n        this.props.updateUser(user, updatedUser);\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n    }\r\n    handleCancelUpdate = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            this.state.editMode ?\r\n                (\r\n                    <tr>\r\n                        <td> <input\r\n                            type='hidden'\r\n                            name='id'\r\n                            value={this.props.user.id}\r\n                        /></td>\r\n                        <td><input\r\n                            type='text'\r\n                            name='firstName'\r\n                            className='input-filled'\r\n                            placeholder={this.props.user.firstName}\r\n                            defaultValue={this.props.user.firstName}\r\n                            onChange={this.handleChange}\r\n                        /></td>\r\n                        <td> <input\r\n                            type='text'\r\n                            name='lastName'\r\n                            className='input-filled'\r\n                            placeholder={this.props.user.lastName}\r\n                            defaultValue={this.props.user.lastName}\r\n                            onChange={this.handleChange}\r\n                        /></td>\r\n                        <td>\r\n                            <button\r\n                                className='input-button'\r\n                                onClick={this.handleUpdateUser.bind(this, this.props.user)} >\r\n                                update\r\n                            </button>\r\n                            <button\r\n                                className='input-button'\r\n                                onClick={this.handleEditMode}>\r\n                                Edit\r\n                           </button>\r\n                        </td>\r\n                    </tr>\r\n\r\n                ) :\r\n                (\r\n                    <tr>\r\n                        <td>{this.props.user.id}</td>\r\n                        <td>{this.props.user.firstName}</td>\r\n                        <td>{this.props.user.lastName}</td>\r\n                        <td> <button\r\n                        className='input-button'\r\n                        onClick={this.handleDeleteUser.bind(this, this.props.user)}>\r\n                            delete\r\n                             </button>\r\n                            <button\r\n                            className='input-button'\r\n                            onClick={this.handleEditMode}>\r\n                                Edit\r\n                             </button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React, { Component } from 'react';\nimport CreateUserForm from './components/createUserForm.js';\nimport Users from './components/users.js';\nimport './css/index.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: [\n        { id: 1, firstName: 'john', lastName: 'green' },\n        { id: 2, firstName: 'peter', lastName: 'bin' }\n      ]\n    }\n  }\n  //function to create new user\n  addNewUser = (user) => {\n    const previousUsers = this.state.users;\n    previousUsers.push({ id: previousUsers.length + 1, firstName: user.firstName, lastName: user.lastName });\n    this.setState({\n      users: previousUsers\n    })\n  }\n  //function to delete user\n  deleteUser = (user) => {\n    const previousUsers = this.state.users;\n    const newUsers = previousUsers.filter((i) => { return (user.id !== i.id) });\n    this.setState({\n      users: newUsers\n    })\n  }\n  //function to update user\n  updateUser = (user, updatedUser) => {\n    console.log(user.id);\n    console.log('updated lastname' + updatedUser.lastName);\n    console.log('old firstname' + user.firstName);\n\n    const previousUsers = this.state.users;\n    if(updatedUser.firstName === '' ){\n      updatedUser.firstName = user.firstName;\n      console.log('old firstname now' + updatedUser.firstName);\n    }\n    if (updatedUser.lastName === ''){\n      updatedUser.lastName = user.lastName;\n    }\n    previousUsers[user.id - 1] = ({ id: user.id, firstName: updatedUser.firstName, lastName: updatedUser.lastName });\n    this.setState({\n      users: previousUsers\n    })\n\n  }\n\n  render() {\n    return (\n      <div className='app-wrapper'>\n        <p>Welcome to UserPage</p>\n        <div className='app-content'>\n        <CreateUserForm addNewUser={this.addNewUser} />\n               <table id=\"customers\">\n                    <tr>\n                        <th>ID</th>\n                        <th>first Name</th>\n                        <th>Last Name</th>\n                        <th>Operations</th>\n                    </tr>\n                      {this.state.users.map((user) => {\n                        return (\n                          <Users user={user} deleteUser={this.deleteUser} updateUser={this.updateUser} />\n                        );\n                      }\n                      )}\n            </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}